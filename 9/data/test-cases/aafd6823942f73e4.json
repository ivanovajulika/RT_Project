{"uid":"aafd6823942f73e4","name":"test_input_name_negative[31 symbols]","fullName":"test_registration#test_input_name_negative","historyId":"c268394ce106874f7b40bb02ecff7a69","time":{"start":1673111133240,"stop":1673111140055,"duration":6815},"status":"skipped","statusMessage":"XFAIL\n\nAssertionError","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fcd476583f8f6b7c0c42c9a4d7258dcc\")>\nname = 'ддддддддддддддддддддддддддддддд'\n\n    @allure.story(\n        \"TC_007.02 | Форма 'Авторизации' - Ввод не валидных данных в поле для ввода имени.\"\n    )\n    @pytest.mark.parametrize(\n        \"name\",\n        [\n            \"\",\n            \"д\",\n            generate_string(31),\n            generate_string(255),\n            generate_string(1000),\n            \"Anna\",\n            \"Анна-Мария-Антуанетта\",\n            \"!№;%:?*()\",\n            \"12345\",\n            \"Карл5\",\n            \"Анна Мария\",\n        ],\n        ids=[\n            \"empty\",\n            \"1 symbols\",\n            \"31 symbols\",\n            \"255 symbols\",\n            \"1000 symbols\",\n            \"Latin symbols\",\n            \"with 2 -\",\n            \"special_chars\",\n            \"digit\",\n            \"symbols with digit\",\n            \"with space\",\n        ],\n    )\n    @pytest.mark.xfail\n    def test_input_name_negative(browser, name):\n        # создает экземпляр страницы авторизации\n        page = LoginPage(browser, link)\n        # переходит на страницу регистрации\n        page.go_registration()\n        # создает экземпляр страницы регистрации\n        page = RegistrPage(browser, link)\n        # вводит имя в поле Имя и проверяет наличие сообщения об ошибке\n>       page.input_name(name)\n\ntest_registration.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.registr_page.RegistrPage object at 0x7f15e1c97c40>\nname = 'ддддддддддддддддддддддддддддддд'\n\n    def input_name(self, name):\n        input = self.browser.find_element(*RegistrPageLocators.INPUT_FIRSTNAME)\n        input.send_keys(name)\n        self.browser.find_element(*RegistrPageLocators.BTN_REGISTR).click()\n>       assert not self.element_is_present(*RegistrPageLocators.ERR)\nE       AssertionError\n\npages/registr_page.py:10: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1673111130814,"stop":1673111133239,"duration":2425},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"browser::0","time":{"start":1673111140060,"stop":1673111140117,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"TC_007.02 | Форма 'Авторизации' - Ввод не валидных данных в поле для ввода имени."},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"suite","value":"test_registration"},{"name":"host","value":"fv-az136-695"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_registration"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"name","value":"'ддддддддддддддддддддддддддддддд'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"aafd6823942f73e4.json","parameterValues":["'ддддддддддддддддддддддддддддддд'"]}