{"uid":"5cd8e3bfc402a35c","name":"test_user_can_go_to_ok","fullName":"test_main#test_user_can_go_to_ok","historyId":"bf60ee74fcf7cb772a550312b906fd5e","time":{"start":1673007548194,"stop":1673007548194,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55c3711ea2a3 <unknown>\n#1 0x55c370fa8f77 <unknown>\n#2 0x55c370fd15f7 <unknown>\n#3 0x55c370fcd7d0 <unknown>\n#4 0x55c37100e0b7 <unknown>\n#5 0x55c37100da5f <unknown>\n#6 0x55c371005903 <unknown>\n#7 0x55c370fd8ece <unknown>\n#8 0x55c370fd9fde <unknown>\n#9 0x55c37123a63e <unknown>\n#10 0x55c37123db79 <unknown>\n#11 0x55c37122089e <unknown>\n#12 0x55c37123ea83 <unknown>\n#13 0x55c371213505 <unknown>\n#14 0x55c37125fca8 <unknown>\n#15 0x55c37125fe36 <unknown>\n#16 0x55c37127b333 <unknown>\n#17 0x7f84b8080609 start_thread","statusTrace":"@pytest.fixture(scope=\"function\")\n    def browser():\n        options = webdriver.ChromeOptions()\n        options.add_argument(\"--window-size=1600,1080\")\n        options.headless = False\n>       browser = webdriver.Chrome(\n            service=Service(ChromeDriverManager().install()), options=options\n        )\n\nconftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:81: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:106: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:288: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:381: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6bebc76d70>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...wn>\\\\n#15 0x55c37125fe36 \\\\u003Cunknown>\\\\n#16 0x55c37127b333 \\\\u003Cunknown>\\\\n#17 0x7f84b8080609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55c3711ea2a3 <unknown>\nE       #1 0x55c370fa8f77 <unknown>\nE       #2 0x55c370fd15f7 <unknown>\nE       #3 0x55c370fcd7d0 <unknown>\nE       #4 0x55c37100e0b7 <unknown>\nE       #5 0x55c37100da5f <unknown>\nE       #6 0x55c371005903 <unknown>\nE       #7 0x55c370fd8ece <unknown>\nE       #8 0x55c370fd9fde <unknown>\nE       #9 0x55c37123a63e <unknown>\nE       #10 0x55c37123db79 <unknown>\nE       #11 0x55c37122089e <unknown>\nE       #12 0x55c37123ea83 <unknown>\nE       #13 0x55c371213505 <unknown>\nE       #14 0x55c37125fca8 <unknown>\nE       #15 0x55c37125fe36 <unknown>\nE       #16 0x55c37127b333 <unknown>\nE       #17 0x7f84b8080609 start_thread\n\n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: WebDriverException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1673007548195,"stop":1673007548920,"duration":725},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55c3711ea2a3 <unknown>\n#1 0x55c370fa8f77 <unknown>\n#2 0x55c370fd15f7 <unknown>\n#3 0x55c370fcd7d0 <unknown>\n#4 0x55c37100e0b7 <unknown>\n#5 0x55c37100da5f <unknown>\n#6 0x55c371005903 <unknown>\n#7 0x55c370fd8ece <unknown>\n#8 0x55c370fd9fde <unknown>\n#9 0x55c37123a63e <unknown>\n#10 0x55c37123db79 <unknown>\n#11 0x55c37122089e <unknown>\n#12 0x55c37123ea83 <unknown>\n#13 0x55c371213505 <unknown>\n#14 0x55c37125fca8 <unknown>\n#15 0x55c37125fe36 <unknown>\n#16 0x55c37127b333 <unknown>\n#17 0x7f84b8080609 start_thread\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 900, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/RT_Project/RT_Project/conftest.py\", line 14, in browser\n    browser = webdriver.Chrome(\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py\", line 81, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py\", line 106, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 288, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 381, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"afterStages":[],"labels":[{"name":"story","value":"TC_004.02 | Наличие кнопки авторизации через соц. сеть OK"},{"name":"suite","value":"test_main"},{"name":"host","value":"fv-az341-442"},{"name":"thread","value":"2674-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_main"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"d7bc2e6822a71915","reportUrl":"https://ivanovajulika.github.io/RT_Project/3//#testresult/d7bc2e6822a71915","status":"passed","time":{"start":1672991227595,"stop":1672991236934,"duration":9339}},{"uid":"4dcad3276d5f30e","reportUrl":"https://ivanovajulika.github.io/RT_Project/2//#testresult/4dcad3276d5f30e","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x560059db12a3 <unknown>\n#1 0x560059b6ff77 <unknown>\n#2 0x560059b985f7 <unknown>\n#3 0x560059b947d0 <unknown>\n#4 0x560059bd50b7 <unknown>\n#5 0x560059bd4a5f <unknown>\n#6 0x560059bcc903 <unknown>\n#7 0x560059b9fece <unknown>\n#8 0x560059ba0fde <unknown>\n#9 0x560059e0163e <unknown>\n#10 0x560059e04b79 <unknown>\n#11 0x560059de789e <unknown>\n#12 0x560059e05a83 <unknown>\n#13 0x560059dda505 <unknown>\n#14 0x560059e26ca8 <unknown>\n#15 0x560059e26e36 <unknown>\n#16 0x560059e42333 <unknown>\n#17 0x7fa3c9177609 start_thread","time":{"start":1672990949845,"stop":1672990949845,"duration":0}}]},"tags":[]},"source":"5cd8e3bfc402a35c.json","parameterValues":[]}